##############################################
# Spring boot properties
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
#
# See README.md for available Spring Profiles
##############################################
spring:
  profiles:
    active:
  application:
    name: roach-bank
  output:
    ansi:
      enabled: ALWAYS
  thymeleaf:
    cache: false
    mode: HTML
  web:
    resources:
      cache:
        cachecontrol:
          max-age: 0
          no-cache: true
          no-store: true
  #############################
  flyway:
    enabled: true
    connect-retries: 15
    clean-on-validation-error: true
    baseline-on-migrate: true
    clean-disabled: false
    locations: classpath:db/crdb,classpath:db/common
  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.CockroachDialect
        connection:
          provider_disables_autocommit: false
        jdbc:
          lob:
            non_contextual_creation: true
          batch_size: 128
          fetch_size: 128
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        hql:
          bulk_id_strategy: org.hibernate.hql.spi.id.inline.CteValuesListBulkIdStrategy
        cache:
          use_minimal_puts: true
          use_second_level_cache: false
  datasource:
    url: jdbc:postgresql://localhost:26257/roach_bank?sslmode=disable
    driver-class-name: org.postgresql.Driver
    username: root
    password:
    hikari:
      pool-name: roach-bank
      connection-init-sql: SELECT 1
      initialization-fail-timeout: -1
      connection-timeout: 5000
      validation-timeout: 20000
      max-lifetime: 180000
      idle-timeout: 60000
      maximum-pool-size: 500
      minimum-idle: 5
      transaction-isolation: TRANSACTION_SERIALIZABLE

# Hikari defaults:
#    private static final long CONNECTION_TIMEOUT = SECONDS.toMillis(30);
#    private static final long VALIDATION_TIMEOUT = SECONDS.toMillis(5);
#    private static final long IDLE_TIMEOUT = MINUTES.toMillis(10);
#    private static final long MAX_LIFETIME = MINUTES.toMillis(30);

#############################
logging:
  pattern:
    console: "%clr(%d{${LOG_DATEFORMAT_PATTERN:HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) [%t] %clr([%logger{39}]){cyan} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
    file: "%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:%5p} [%t] %logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
  file:
    name: .log/server.log
  logback:
    rollingpolicy:
      max-history: 3
#############################
info:
  build:
    name: Roach Bank
    version: 2.0.0
#############################
management:
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: env,info,health,metrics,flyway,prometheus,shutdown
  endpoint:
    health:
      show-details: always
  health:
    defaults:
      enabled: true
    db:
      enabled: false
  metrics:
    tags:
      application: ${spring.application.name}
#############################
# HTTP and HTTPS with self-signed cert for webhook sink
server:
  port: 8090
  error:
    whitelabel:
      enabled: false
    include-stacktrace: always
    include-message: always
#############################
# Bank server config
#############################
bank:
  name: "Default"
  # Default accounts per city scan limit
  default-account-limit: 10
  # Interval of pushing cached balance reports (seconds)
  report-query-timeout: 60
  # SELECT using '.. FOR UPDATE' locks
  select-for-update: true
  # Clear all data at startup
  clear-at-startup: false
  # Account plan to run workload against
  account-plan:
    # Number of accounts per city
    accounts-per-city: 5000
    # Initial balance per account in same currency
    initial-balance: "10000.00"
    # Account currency
    currency: USD
  # Region to city mappings (does not need to match CRDB regions)
  regions:
    - name: us-east-1
      cities: "new york,boston,washington dc,miami,charlotte,atlanta"
    - name: us-east-2
      cities: "st louis,indianapolis,nashville,dallas,houston,detroit"
    - name: us-west-1
      cities: "san francisco,los angeles,san diego,las vegas,salt lake city"
    - name: us-west-2
      cities: "seattle,tacoma,portland,salem,bend,eugene"
    - name: us-central-1
      cities: "phoenix,minneapolis,chicago,detroit"
    - name: eu-central-1
      primary: true
      cities: "berlin,hamburg,munich,frankfurt,dusseldorf,leipzig,dortmund,essen,stuttgart"
    - name: eu-central-2
      secondary: true
      cities: "zurich,krakov,zagraeb,zaragoza,lodz,athens,bratislava,prague,sofia,bucharest,vienna,warsaw,budapest"
    - name: eu-west-1
      cities: "dublin,belfast,liverpool,manchester,glasgow,birmingham,leeds"
    - name: eu-west-2
      cities: "london,amsterdam,rotterdam,antwerp,hague,ghent,brussels"
    - name: eu-west-3
      cities: "lyon,lisbon,toulouse,paris,cologne,seville,marseille"
    - name: eu-south-1
      cities: "rome,milan,naples,turin,valencia,palermo"
    - name: eu-south-2
      cities: "madrid,barcelona,sintra,lisbon"
    - name: eu-north-1
      cities: "stockholm,copenhagen,helsinki,oslo,riga,tallinn"
    - name: ap-northeast-1
      cities: "hong kong,beijing,shanghai,tokyo"
    - name: ap-southeast-2
      cities: "singapore,jakarta,sydney,melbourne"
    - name: ca-central-1
      cities: "calgary,edmonton,winnipeg,regina,brandon,dryden"
    - name: sa-east-1
      cities: "sao paulo,rio de janeiro,salvador,buenos aires"
    - name: af-south-1
      cities: "cape town,durban,johannesburg,pretoria,grahamstown,kimberley"
  # Mapping of CRDB regions to bank regions (keys must match existing locality regions)
  region-mapping:
    aws-eu-central-1: eu-central-1
    aws-eu-central-2: eu-central-2
    aws-eu-west-1: eu-west-1
    aws-eu-west-2: eu-west-2
    aws-eu-west-3: eu-west-3
    aws-eu-south-1: eu-south-1
    aws-eu-south-2: eu-south-2
    aws-eu-north-1: eu-north-1
    gcp-europe-central2: eu-central-2
    gcp-europe-west1: eu-west-1
    gcp-europe-west2: eu-west-2
    gcp-europe-west3: eu-central-1
    gcp-europe-west4: eu-west-3
    gcp-europe-west6: eu-central-1
    gcp-europe-west8: eu-south-1
    gcp-europe-west9: eu-south-1
    gcp-europe-west10: eu-central-1
    gcp-europe-west12: eu-south-2
    gcp-europe-southwest1: eu-south-2
    gcp-europe-southwest2: eu-south-1
    gcp-europe-north1: eu-north-1
