##############################################
# Spring boot properties
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
#
# See README.md for available Spring Profiles
##############################################

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: roach-bank
  profiles:
    active: pgjdbc-local,retry-client,cdc-none
  output:
    ansi:
      enabled: ALWAYS
  jackson:
    serialization:
      indent_output: true
      write_dates_as_timestamps: false
    deserialization:
      fail_on_unknown_properties: false
      fail_on_ignored_properties: false
    default-property-inclusion: non_null
    locale: en_US
  mvc:
    throw-exception-if-no-handler-found: true
  thymeleaf:
    cache: false
    mode: HTML
  web:
    resources:
      cache:
        cachecontrol:
          max-age: 0
          no-cache: true
          no-store: true
#############################
  flyway:
    enabled: true
    connect-retries: 15
    clean-on-validation-error: true
    baseline-on-migrate: true
    clean-disabled: false
  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.CockroachDialect
        connection:
          provider_disables_autocommit: false
        jdbc:
          lob:
            non_contextual_creation: true
          batch_size: 128
          fetch_size: 128
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        hql:
          bulk_id_strategy: org.hibernate.hql.spi.id.inline.CteValuesListBulkIdStrategy
        cache:
          use_minimal_puts: true
          use_second_level_cache: false
  datasource:
    driver-class-name: io.cockroachdb.jdbc.CockroachDriver
    hikari:
      pool-name: roach-bank
      connection-init-sql: SELECT 1
      initialization-fail-timeout: -1
      connection-timeout: 5000
      validation-timeout: 20000
      # 3m
      max-lifetime: 180000
      # 1m
      idle-timeout: 60000
      maximum-pool-size: 200
      minimum-idle: 25
      transaction-isolation: TRANSACTION_SERIALIZABLE
#      transaction-isolation: TRANSACTION_READ_COMMITTED

# Hikari defaults:
#    private static final long CONNECTION_TIMEOUT = SECONDS.toMillis(30);
#    private static final long VALIDATION_TIMEOUT = SECONDS.toMillis(5);
#    private static final long IDLE_TIMEOUT = MINUTES.toMillis(10);
#    private static final long MAX_LIFETIME = MINUTES.toMillis(30);

#############################
logging:
  pattern:
    console: "%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr([%logger{39}]){cyan} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
    file: "%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:%5p} [%t] %logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
  file:
    name: .log/server.log
  logback:
    rollingpolicy:
      max-history: 3
#############################
info:
  build:
    artifact: io.roach.bank.server
    name: Roach Bank
    description: Accounting ledger based on Spring Boot and CockroachDB
    version: 2.0.0
    app-label: Roach Bank
#############################
management:
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: env,info,health,metrics,flyway,prometheus
  endpoint:
    health:
      show-details: always
  health:
    defaults:
      enabled: true
    db:
      enabled: false
  metrics:
    tags:
      application: ${spring.application.name}
#############################
# HTTP and HTTPS with self-signed cert for webhook sink
server:
  http:
    port: 8090
  port: 8443
  ssl:
    key-store: classpath:cert/bank.p12
    key-store-password: secret
    key-store-type: pkcs12
    key-alias: bank
    key-password: secret
  gzip:
    enabled: true
  error:
    whitelabel:
      enabled: false
    include-stacktrace: always
    include-message: always
#############################
roachbank:
  health:
    # Validation query for datasource health check
    validation-query: select 1
  # WS push permits per second rate limit
  pushPermitsPerSec: 10.0
  # Interval of pushing cached balance reports (seconds)
  reportPushInterval: 120
  # Report / WS push query timeout (seconds)
  reportQueryTimeoutSeconds: 120
  # Default limit unless client specified
  accountsPerCity: 10
  # Read accounts with SELECT FOR UPDATE (when updateRunningBalance=true)
  selectForUpdate: false
  # Account plan to run workload against
  accountPlan:
    # CAUTION: Clear accounts and transactions at startup
    clearAtStartup: false
    # Filter on region, empty implies all regions
    region: ""
    # Number of accounts per city (total: num_cities x accountsPerCity)
    accountsPerCity: 1000
    # Initial balance
    initialBalance: "5000.00"
    # Account currency
    currency: "USD"
